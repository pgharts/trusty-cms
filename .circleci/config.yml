version: 2.1

orbs:
  qlty: qltysh/qlty-orb@0.0.6

jobs:
  test:
    docker:
      - image: cimg/ruby:3.3.1-node
        environment:
          - RAILS_ENV: test
      - image: cimg/mysql:5.7.36
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          - MYSQL_DATABASE: trusty_cms_test
    working_directory: ~/trusty-cms
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # Fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install bundler
          command: gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"

      - run:
          name: Install Ruby dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache

      - run:
          name: Install JavaScript dependencies
          command: yarn install --modules-folder spec/dummy/node_modules

      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: Set up database
          command: |
            sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6
            bundle exec rake app:db:migrate

      - run:
          name: Create test results directory
          command: mkdir /tmp/test-results

      - run:
          name: Run tests with coverage
          command: |
            bundle exec rspec --format progress -o /tmp/test-results/rspec.xml --profile 10 $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
          when: always

      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - qlty/coverage_publish:
          files: coverage/lcov.info

workflows:
  ci:
    jobs:
      - test:
          context: qlty-context
